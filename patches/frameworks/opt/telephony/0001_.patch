commit b734d4b1fd92235d1597899d00cae73d6c6d21b0
Author: leskal <alexakis1997@gmail.com>
Date:   Mon Oct 31 12:49:22 2016 +0200

    Remove UICC TLV Data decoding
    
    Change-Id: Id2d8909bc40272a44eb35253c7bc4ac72bdbfa0a

diff --git a/src/java/com/android/internal/telephony/uicc/IccFileHandler.java b/src/java/com/android/internal/telephony/uicc/IccFileHandler.java
index 54e05f7..dc97fb2 100644
--- a/src/java/com/android/internal/telephony/uicc/IccFileHandler.java
+++ b/src/java/com/android/internal/telephony/uicc/IccFileHandler.java
@@ -447,30 +447,18 @@ public abstract class IccFileHandler extends Handler implements IccConstants {
 
                 data = result.payload;
 
-                if (UiccTlvData.isUiccTlvData(data)) {
-                    UiccTlvData tlvData = UiccTlvData.parse(data);
-
-                    if (tlvData.isIncomplete()) {
-                        throw new IccFileTypeMismatch();
-                    }
-
-                    recordSize = new int[3];
-                    recordSize[0] = tlvData.mRecordSize;
-                    recordSize[1] = tlvData.mFileSize;
-                    recordSize[2] = tlvData.mNumRecords;
-                } else {
-                    if (TYPE_EF != data[RESPONSE_DATA_FILE_TYPE] ||
-                        EF_TYPE_LINEAR_FIXED != data[RESPONSE_DATA_STRUCTURE]) {
-                        throw new IccFileTypeMismatch();
-                    }
-
-                    recordSize = new int[3];
-                    recordSize[0] = data[RESPONSE_DATA_RECORD_LENGTH] & 0xFF;
-                    recordSize[1] = ((data[RESPONSE_DATA_FILE_SIZE_1] & 0xff) << 8)
-                           + (data[RESPONSE_DATA_FILE_SIZE_2] & 0xff);
-                    recordSize[2] = recordSize[1] / recordSize[0];
+                if (TYPE_EF != data[RESPONSE_DATA_FILE_TYPE] ||
+                    EF_TYPE_LINEAR_FIXED != data[RESPONSE_DATA_STRUCTURE]) {
+                    throw new IccFileTypeMismatch();
                 }
 
+                recordSize = new int[3];
+                recordSize[0] = data[RESPONSE_DATA_RECORD_LENGTH] & 0xFF;
+                recordSize[1] = ((data[RESPONSE_DATA_FILE_SIZE_1] & 0xff) << 8)
+                       + (data[RESPONSE_DATA_FILE_SIZE_2] & 0xff);
+                recordSize[2] = recordSize[1] / recordSize[0];
+                
+
                 sendResult(response, recordSize, null);
                 break;
 
@@ -488,32 +476,21 @@ public abstract class IccFileHandler extends Handler implements IccConstants {
                 data = result.payload;
                 path = lc.mPath;
 
-                if (UiccTlvData.isUiccTlvData(data)) {
-                    UiccTlvData tlvData = UiccTlvData.parse(data);
-
-                    if (tlvData.isIncomplete()) {
-                        throw new IccFileTypeMismatch();
-                    }
-
-                    lc.mRecordSize = tlvData.mRecordSize;
-                    lc.mCountRecords = tlvData.mNumRecords;
-                    size = tlvData.mFileSize;
-                } else {
-                    if (TYPE_EF != data[RESPONSE_DATA_FILE_TYPE]) {
-                        throw new IccFileTypeMismatch();
-                    }
+                if (TYPE_EF != data[RESPONSE_DATA_FILE_TYPE]) {
+                    throw new IccFileTypeMismatch();
+                }
 
-                    if (EF_TYPE_LINEAR_FIXED != data[RESPONSE_DATA_STRUCTURE]) {
-                        throw new IccFileTypeMismatch();
-                    }
+                if (EF_TYPE_LINEAR_FIXED != data[RESPONSE_DATA_STRUCTURE]) {
+                    throw new IccFileTypeMismatch();
+                }
 
-                    lc.mRecordSize = data[RESPONSE_DATA_RECORD_LENGTH] & 0xFF;
+                lc.mRecordSize = data[RESPONSE_DATA_RECORD_LENGTH] & 0xFF;
 
-                    size = ((data[RESPONSE_DATA_FILE_SIZE_1] & 0xff) << 8)
-                           + (data[RESPONSE_DATA_FILE_SIZE_2] & 0xff);
+                size = ((data[RESPONSE_DATA_FILE_SIZE_1] & 0xff) << 8)
+                       + (data[RESPONSE_DATA_FILE_SIZE_2] & 0xff);
 
-                    lc.mCountRecords = size / lc.mRecordSize;
-                }
+                lc.mCountRecords = size / lc.mRecordSize;
+                
 
                  if (lc.mLoadAll) {
                      lc.results = new ArrayList<byte[]>(lc.mCountRecords);
@@ -541,26 +518,17 @@ public abstract class IccFileHandler extends Handler implements IccConstants {
 
                 fileid = msg.arg1;
 
-                if (UiccTlvData.isUiccTlvData(data)) {
-                    UiccTlvData tlvData = UiccTlvData.parse(data);
-
-                    if (tlvData.mFileSize < 0) {
-                        throw new IccFileTypeMismatch();
-                    }
-
-                    size = tlvData.mFileSize;
-                } else {
-                    if (TYPE_EF != data[RESPONSE_DATA_FILE_TYPE]) {
+              
+                if (TYPE_EF != data[RESPONSE_DATA_FILE_TYPE]) {
                         throw new IccFileTypeMismatch();
-                    }
+                }
 
-                    if (EF_TYPE_TRANSPARENT != data[RESPONSE_DATA_STRUCTURE]) {
+                if (EF_TYPE_TRANSPARENT != data[RESPONSE_DATA_STRUCTURE]) {
                         throw new IccFileTypeMismatch();
-                    }
+                }
 
-                    size = ((data[RESPONSE_DATA_FILE_SIZE_1] & 0xff) << 8)
+                size = ((data[RESPONSE_DATA_FILE_SIZE_1] & 0xff) << 8)
                            + (data[RESPONSE_DATA_FILE_SIZE_2] & 0xff);
-                }
 
                 mCi.iccIOForApp(COMMAND_READ_BINARY, fileid, getEFPath(fileid),
                                 0, 0, size, null, null, mAid,
diff --git a/src/java/com/android/internal/telephony/uicc/UiccTlvData.java b/src/java/com/android/internal/telephony/uicc/UiccTlvData.java
index 17f594c..be963aa 100644
--- a/src/java/com/android/internal/telephony/uicc/UiccTlvData.java
+++ b/src/java/com/android/internal/telephony/uicc/UiccTlvData.java
@@ -1,12 +1,10 @@
 package com.android.internal.telephony.uicc;
 
-import android.telephony.Rlog;
 
 /**
  * UICC TLV Data Parser according to ETSI TS 102 221 spec.
  */
 public class UiccTlvData {
-    private static final String LOG_TAG = "UiccTlvData";
 
     private static final int TLV_FORMAT_ID = 0x62;
 
@@ -85,9 +83,8 @@ public class UiccTlvData {
                         break;
 
                     default:
-                        Rlog.d(LOG_TAG, "Unknown tag 0x" + String.format("%02X", currentTag));
-                        currentLocation = parsedData.parseSomeTag(data, currentLocation);
-                        break;
+                        //Unknown TAG
+                        throw new IccFileTypeMismatch();
                 }
             }
 
